<div class="about-container">
    <div class="about-image">
        <img src="images/troll.png"/>
    </div>
    <div class="about-details">
        <p>@ProductName</p>
        <p>@Version</p>
        <p>@Copyright</p>
        <p>@CompanyName</p>
        <div class="scrollable-content">
            <p>@Description</p>
        </div>
    </div>
    <div class="about-contributors scrollable-content">
        <ul>
            @foreach (var contributor in Properties.Contributors.Usernames)
            {
                <li>@contributor</li>
            }
        </ul>
    </div>
    <div class="about-disclaimer scrollable-content">
        <p>@Disclaimer</p>
    </div>
</div>

<style>
    .about-container{
        display: grid;
        grid-template-columns: 1fr 2fr;
        grid-template-rows: 2fr 1fr;
        height: 100vh;
        width: 100vw;
    }
    .about-image{
        grid-row: 1;
        grid-column: 1;

    }
    .about-details{
        grid-row: 1;
        grid-column: 2;
    }
    .about-contributors{
        grid-row: 2;
        grid-column: 1;
    }
    .about-disclaimer{
        grid-row: 2;
        grid-column: 2;
    }
    .scrollable-content{
        overflow-y: scroll;
        height: 100%;
    }
    img{
        max-height: 33%;
        max-width: 100%;
        object-fit: scale-down;
    }
</style>
@code {
    private static string ProductName => Chummer.About.AssemblyProduct;
    private string Version { get; set; }
    private string Copyright { get; set; }
    private string CompanyName { get; set; }
    private string Description { get; set; }
    private string Disclaimer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var strSpace = await LanguageManager.GetStringAsync("String_Space").ConfigureAwait(false);

        var productName = await LanguageManager.GetStringAsync("String_Version", false).ConfigureAwait(false);
        Version = string.IsNullOrEmpty(productName) ? "Version" : productName + strSpace + Chummer.About.AssemblyVersion;

        var copyright = await LanguageManager.GetStringAsync("About_Copyright_Text", false).ConfigureAwait(false);
        Copyright = string.IsNullOrEmpty(copyright) ? Chummer.About.AssemblyCopyright : copyright;

        var company = await LanguageManager.GetStringAsync("About_Company_Text", false).ConfigureAwait(false);
        CompanyName = string.IsNullOrEmpty(company) ? Chummer.About.AssemblyCompany : company;

        var description = await LanguageManager.GetStringAsync("About_Description_Text", false).ConfigureAwait(false);
        Description = string.IsNullOrEmpty(description) ? Chummer.About.AssemblyDescription : description;

        Disclaimer = await LanguageManager.GetStringAsync("About_Label_Disclaimer_Text").ConfigureAwait(false);
    }

}
