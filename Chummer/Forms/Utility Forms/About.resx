<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ss18AAAAAElFTkSuQmCC
</value>
  </data>
</root>